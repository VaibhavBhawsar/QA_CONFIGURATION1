name: PR Check - Validate Config Files

on:
  pull_request:
    paths:
      - 'config/**'  # Trigger only if files in config/ change
    branches-target:  
      - automation  # âœ… Runs only for PRs targeting 'automation' branch
    types: [opened, synchronize, reopened]
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  validate-configs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history for git diff

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found, skipping dependency installation."
          fi

      - name: Find Changed Config Files
        id: find-configs
        run: |
          # Get changed .cfg files in the config/ directory
          CHANGED_FILES=$(git diff --name-only origin/automation...HEAD | grep '^config/.*\.cfg$' || true)

          # Identify the expected/default file and input files
          DEFAULT_FILE=$(echo "$CHANGED_FILES" | grep -E "(default|expected)\.cfg" || echo "")
          INPUT_FILES=$(echo "$CHANGED_FILES" | grep -v "$DEFAULT_FILE" | tr '\n' ',')

          echo "Changed files: $CHANGED_FILES"
          echo "Default file: $DEFAULT_FILE"
          echo "Input files: $INPUT_FILES"

          # Set environment variables
          echo "INPUT_FILES=$INPUT_FILES" >> $GITHUB_ENV
          echo "DEFAULT_FILE=$DEFAULT_FILE" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "INPUT_FILES=${{ env.INPUT_FILES }}"
          echo "DEFAULT_FILE=${{ env.DEFAULT_FILE }}"

      - name: Run Python Validation Script
        if: env.INPUT_FILES != '' && env.DEFAULT_FILE != ''
        run: |
          echo "Running validation script..."
          python3 utils/check_cfg_params.py --input_files "${{ env.INPUT_FILES }}" --default_file "${{ env.DEFAULT_FILE }}"

      - name: Fail PR on Validation Errors
        if: failure()
        run: |
          echo "Config file validation failed. Blocking PR merge."
          exit 1
